{"_id":"p-throttler","_rev":"7-491e3869a7d75ca81400d73327291b53","name":"p-throttler","description":"A promise based throttler capable of limiting execution of parallel tasks","dist-tags":{"latest":"0.1.1"},"versions":{"0.0.1":{"name":"p-throttler","version":"0.0.1","description":"A promise based throttler capable of limiting execution of parallel tasks","main":"index.js","dependencies":{"q":"~0.9.2"},"devDependencies":{"mocha":"~1.10.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-p-throttler"},"bugs":{"url":"http://github.com/IndigoUnited/node-p-throttler/issues"},"keywords":["promise","throttler","trottle","deferred","worker","tasks","parallel"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","_id":"p-throttler@0.0.1","dist":{"shasum":"c341e3589ec843852a035e6f88e6c1e96150029b","tarball":"http://registry.npmjs.org/p-throttler/-/p-throttler-0.0.1.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.1.0":{"name":"p-throttler","version":"0.1.0","description":"A promise based throttler capable of limiting execution of parallel tasks","main":"index.js","dependencies":{"q":"~0.9.2"},"devDependencies":{"mocha":"~1.10.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-p-throttler"},"bugs":{"url":"http://github.com/IndigoUnited/node-p-throttler/issues"},"keywords":["promise","throttler","trottle","deferred","worker","tasks","parallel"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","homepage":"https://github.com/IndigoUnited/node-p-throttler","_id":"p-throttler@0.1.0","_shasum":"1b16907942c333e6f1ddeabcb3479204b8c417c4","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"dist":{"shasum":"1b16907942c333e6f1ddeabcb3479204b8c417c4","tarball":"http://registry.npmjs.org/p-throttler/-/p-throttler-0.1.0.tgz"},"directories":{}},"0.1.1":{"name":"p-throttler","version":"0.1.1","description":"A promise based throttler capable of limiting execution of parallel tasks","main":"index.js","dependencies":{"q":"~0.9.2"},"devDependencies":{"mocha":"~1.10.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-p-throttler"},"bugs":{"url":"http://github.com/IndigoUnited/node-p-throttler/issues"},"keywords":["promise","throttler","trottle","deferred","worker","tasks","parallel"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","homepage":"https://github.com/IndigoUnited/node-p-throttler","_id":"p-throttler@0.1.1","_shasum":"15246409d225d3eefca85c50de710a83a78cca6a","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"dist":{"shasum":"15246409d225d3eefca85c50de710a83a78cca6a","tarball":"http://registry.npmjs.org/p-throttler/-/p-throttler-0.1.1.tgz"},"directories":{}}},"readme":"# p-throttler [![Build Status](https://secure.travis-ci.org/IndigoUnited/node-p-throttler.png)](http://travis-ci.org/IndigoUnited/node-p-throttler.png)\n\nA promise based throttler responsible for limiting execution of parallel tasks.\nThe number of parallel tasks may be limited and configured per type.\n\n\n## Installation\n\n`$ npm install p-throttler`\n\n\n## API\n\n### #create(defaultConcurrency, types)\n\nConstructs a new throttler.\n\nThe `defaultConcurrency` is the default maximum concurrent functions being run (-1 to specify no limits).   \nThe `types` allows you to specify different concurrencies for different types.   \n\nExample:\n\n```js\nvar throttler = PThrottler.create(15, {  // or new PThrottler()\n    'network_io': 10,\n    'disk_io': 50\n});\n```\n\n\n### .enqueue(func, [type]): Promise\n\nEnqueues a function to be ran. The function is expected to return a promise or a value.   \nThe returned promise is resolved when the function finishes execution.\n\nThe `type` argument is optional and can be a `string` or an array of `strings`.   \nUse it to specify the type(s) associated with the function.   \n\nThe function will run as soon as a free slot is available for every `type`.  \nIf no `type` is passed or is unknown, the `defaultConcurrency` is used.  \n\nThe execution order is guaranteed for functions enqueued with the exact same `type` argument.\n\nExample:\n\n```js\n\nvar method = function () {\n    return Q.resolve('foo');\n};\n\nvar throttler = PThrottler.create(15, {\n    'foo': 1,\n    'bar': 2\n});\n\n// Single type, will only run when a free slot for\n// \"foo\" is available\nthrottler.enqueue(function () {\n    return method();    // method() returns some promise\n}, 'foo')\n.then(function (value) {\n    console.log(value);\n});\n\n// Multiple type, will only run when a free slot for\n// \"foo\" and \"bar\" are available\nthrottler.enqueue(function () {\n    return method();    // method() returns some promise\n}, ['foo', 'bar'])\n.then(function (value) {\n    console.log(value);\n});\n```\n\n\n### .abort(): Promise\n\nAborts all current work being done.\nReturns a promise that is resolved when the current running functions finish to execute.   \nAny function that was in the queue waiting to be ran is removed immediately.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"time":{"modified":"2014-09-08T00:20:55.030Z","created":"2013-05-27T21:43:20.951Z","0.0.1":"2013-05-27T21:43:24.318Z","0.1.0":"2014-09-07T23:46:27.464Z","0.1.1":"2014-09-08T00:20:55.030Z"},"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-p-throttler"},"homepage":"https://github.com/IndigoUnited/node-p-throttler","keywords":["promise","throttler","trottle","deferred","worker","tasks","parallel"],"bugs":{"url":"http://github.com/IndigoUnited/node-p-throttler/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"5W7GJZLV9F8IYDR8FXHW0ZNCZ\""}